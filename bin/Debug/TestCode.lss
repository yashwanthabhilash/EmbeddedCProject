
bin\Debug\TestCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .fuse         00000003  00820000  00820000  0000012c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  0000012f  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000038  00000000  00000000  0000014f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000124  00000000  00000000  00000187  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000b4  00000000  00000000  000002ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000125  00000000  00000000  0000035f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000484  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000099  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include<util/delay.h>

int main(void)
{

    DDRB |= (1<<PB0); //Set B0=1 for LED
  80:	20 9a       	sbi	0x04, 0	; 4
    DDRD &=~(1<<PD0); //clear D0
  82:	50 98       	cbi	0x0a, 0	; 10
    PORTD|=(1<<PD0); //set D0
  84:	58 9a       	sbi	0x0b, 0	; 11
    DDRD &=~(1<<PD1); //clear D0
  86:	51 98       	cbi	0x0a, 1	; 10
    PORTD|=(1<<PD1); //set D0
  88:	59 9a       	sbi	0x0b, 1	; 11


    while(1){
         if(!(PIND&(1<<PD0)) && !(PIND&(1<<PD1))) {
  8a:	48 99       	sbic	0x09, 0	; 9
  8c:	05 c0       	rjmp	.+10     	; 0x98 <main+0x18>
  8e:	49 99       	sbic	0x09, 1	; 9
  90:	03 c0       	rjmp	.+6      	; 0x98 <main+0x18>
        PORTB|=(1<<PB0);
  92:	28 9a       	sbi	0x05, 0	; 5
    DDRD &=~(1<<PD1); //clear D0
    PORTD|=(1<<PD1); //set D0


    while(1){
         if(!(PIND&(1<<PD0)) && !(PIND&(1<<PD1))) {
  94:	48 9b       	sbis	0x09, 0	; 9
  96:	fb cf       	rjmp	.-10     	; 0x8e <main+0xe>
        PORTB|=(1<<PB0);
            }
        else if(!(PIND&(1<<PD0)) && (PIND&(1<<PD1))){
  98:	48 99       	sbic	0x09, 0	; 9
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <main+0x20>
  9c:	49 99       	sbic	0x09, 1	; 9
  9e:	08 c0       	rjmp	.+16     	; 0xb0 <main+0x30>
        PORTB&= ~(1<<PB0);
            }
        else if((PIND&(1<<PD0)) && !(PIND&(1<<PD1))){
  a0:	48 9b       	sbis	0x09, 0	; 9
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <main+0x28>
  a4:	49 9b       	sbis	0x09, 1	; 9
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <main+0x30>
        PORTB&= ~(1<<PB0);
            }
        else if((PIND&(1<<PD0)) && (PIND&(1<<PD1))){
  a8:	48 9b       	sbis	0x09, 0	; 9
  aa:	ef cf       	rjmp	.-34     	; 0x8a <main+0xa>
  ac:	49 9b       	sbis	0x09, 1	; 9
  ae:	ed cf       	rjmp	.-38     	; 0x8a <main+0xa>
        PORTB&= ~(1<<PB0);
  b0:	28 98       	cbi	0x05, 0	; 5
  b2:	eb cf       	rjmp	.-42     	; 0x8a <main+0xa>

000000b4 <_exit>:
  b4:	f8 94       	cli

000000b6 <__stop_program>:
  b6:	ff cf       	rjmp	.-2      	; 0xb6 <__stop_program>
